<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0525.1210                               -->
<workbook original-version='18.1' source-build='2020.2.1 (20202.20.0525.1210)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='cleaned_policedata' inline='true' name='federated.1iqnmt20t2zpno1cema5w0s79047' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_policedata' name='textscan.1u399vw054suiz1743acg18jntma'>
            <connection class='textscan' directory='C:/Users/Jing/Desktop/WarmUps/police_data' filename='cleaned_policedata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1u399vw054suiz1743acg18jntma' name='cleaned_policedata.csv' table='[cleaned_policedata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='unique_mos_id' ordinal='0' />
            <column datatype='string' name='first_name' ordinal='1' />
            <column datatype='string' name='last_name' ordinal='2' />
            <column datatype='string' name='command_now' ordinal='3' />
            <column datatype='integer' name='complaint_id' ordinal='4' />
            <column datatype='integer' name='month_received' ordinal='5' />
            <column datatype='integer' name='year_received' ordinal='6' />
            <column datatype='integer' name='month_closed' ordinal='7' />
            <column datatype='integer' name='year_closed' ordinal='8' />
            <column datatype='string' name='command_at_incident' ordinal='9' />
            <column datatype='string' name='rank_abbrev_incident' ordinal='10' />
            <column datatype='string' name='rank_abbrev_now' ordinal='11' />
            <column datatype='string' name='rank_now' ordinal='12' />
            <column datatype='string' name='rank_incident' ordinal='13' />
            <column datatype='string' name='mos_ethnicity' ordinal='14' />
            <column datatype='string' name='mos_gender' ordinal='15' />
            <column datatype='integer' name='mos_age_incident' ordinal='16' />
            <column datatype='string' name='complainant_ethnicity' ordinal='17' />
            <column datatype='string' name='complainant_gender' ordinal='18' />
            <column datatype='real' name='complainant_age_incident' ordinal='19' />
            <column datatype='string' name='fado_type' ordinal='20' />
            <column datatype='string' name='allegation' ordinal='21' />
            <column datatype='real' name='precinct' ordinal='22' />
            <column datatype='string' name='contact_reason' ordinal='23' />
            <column datatype='string' name='outcome_description' ordinal='24' />
            <column datatype='string' name='board_disposition' ordinal='25' />
            <column datatype='string' name='borough' ordinal='26' />
            <column datatype='string' name='mayor' ordinal='27' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1u399vw054suiz1743acg18jntma' name='cleaned_policedata.csv' table='[cleaned_policedata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='unique_mos_id' ordinal='0' />
            <column datatype='string' name='first_name' ordinal='1' />
            <column datatype='string' name='last_name' ordinal='2' />
            <column datatype='string' name='command_now' ordinal='3' />
            <column datatype='integer' name='complaint_id' ordinal='4' />
            <column datatype='integer' name='month_received' ordinal='5' />
            <column datatype='integer' name='year_received' ordinal='6' />
            <column datatype='integer' name='month_closed' ordinal='7' />
            <column datatype='integer' name='year_closed' ordinal='8' />
            <column datatype='string' name='command_at_incident' ordinal='9' />
            <column datatype='string' name='rank_abbrev_incident' ordinal='10' />
            <column datatype='string' name='rank_abbrev_now' ordinal='11' />
            <column datatype='string' name='rank_now' ordinal='12' />
            <column datatype='string' name='rank_incident' ordinal='13' />
            <column datatype='string' name='mos_ethnicity' ordinal='14' />
            <column datatype='string' name='mos_gender' ordinal='15' />
            <column datatype='integer' name='mos_age_incident' ordinal='16' />
            <column datatype='string' name='complainant_ethnicity' ordinal='17' />
            <column datatype='string' name='complainant_gender' ordinal='18' />
            <column datatype='real' name='complainant_age_incident' ordinal='19' />
            <column datatype='string' name='fado_type' ordinal='20' />
            <column datatype='string' name='allegation' ordinal='21' />
            <column datatype='real' name='precinct' ordinal='22' />
            <column datatype='string' name='contact_reason' ordinal='23' />
            <column datatype='string' name='outcome_description' ordinal='24' />
            <column datatype='string' name='board_disposition' ordinal='25' />
            <column datatype='string' name='borough' ordinal='26' />
            <column datatype='string' name='mayor' ordinal='27' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unique_mos_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unique_mos_id]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>unique_mos_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[first_name]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>first_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[last_name]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>last_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>command_now</remote-name>
            <remote-type>129</remote-type>
            <local-name>[command_now]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>command_now</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complaint_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[complaint_id]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>complaint_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_received</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month_received]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>month_received</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_received</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year_received]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>year_received</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_closed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month_closed]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>month_closed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_closed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year_closed]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>year_closed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>command_at_incident</remote-name>
            <remote-type>129</remote-type>
            <local-name>[command_at_incident]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>command_at_incident</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank_abbrev_incident</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rank_abbrev_incident]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>rank_abbrev_incident</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank_abbrev_now</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rank_abbrev_now]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>rank_abbrev_now</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank_now</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rank_now]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>rank_now</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank_incident</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rank_incident]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>rank_incident</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mos_ethnicity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mos_ethnicity]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>mos_ethnicity</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mos_gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mos_gender]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>mos_gender</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mos_age_incident</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mos_age_incident]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>mos_age_incident</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complainant_ethnicity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[complainant_ethnicity]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>complainant_ethnicity</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complainant_gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[complainant_gender]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>complainant_gender</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>complainant_age_incident</remote-name>
            <remote-type>5</remote-type>
            <local-name>[complainant_age_incident]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>complainant_age_incident</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fado_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fado_type]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>fado_type</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>allegation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[allegation]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>allegation</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>precinct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[precinct]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>precinct</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact_reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[contact_reason]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>contact_reason</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>outcome_description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[outcome_description]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>outcome_description</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>board_disposition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[board_disposition]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>board_disposition</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>borough</remote-name>
            <remote-type>129</remote-type>
            <local-name>[borough]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>borough</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mayor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mayor]</local-name>
            <parent-name>[cleaned_policedata.csv]</parent-name>
            <remote-alias>mayor</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ranks' datatype='integer' name='[Calculation_578431085775630337]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(COUNT([complaint_id]),&apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_578431085778227202]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_policedata.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_policedata.csv_F9167300AE8F4EAABDFDCD7C19076F70]' role='measure' type='quantitative' />
      <column caption='Allegation - Split 1' datatype='string' name='[allegation - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1iqnmt20t2zpno1cema5w0s79047].[allegation]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [allegation], &quot;&apos; &apos;&quot;, 1 ) )' />
      </column>
      <column caption='Allegation' datatype='string' name='[allegation]' role='dimension' type='nominal' />
      <column caption='Board Disposition' datatype='string' name='[board_disposition]' role='dimension' type='nominal' />
      <column caption='Borough' datatype='string' name='[borough]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Command At Incident' datatype='string' name='[command_at_incident]' role='dimension' type='nominal' />
      <column caption='Command Now' datatype='string' name='[command_now]' role='dimension' type='nominal' />
      <column caption='Complainant Age Incident' datatype='real' name='[complainant_age_incident]' role='measure' type='quantitative' />
      <column caption='Complainant Ethnicity' datatype='string' name='[complainant_ethnicity]' role='dimension' type='nominal' />
      <column caption='Complainant Gender' datatype='string' name='[complainant_gender]' role='dimension' type='nominal' />
      <column caption='Complaint Id' datatype='integer' name='[complaint_id]' role='dimension' type='ordinal' />
      <column caption='Contact Reason' datatype='string' name='[contact_reason]' role='dimension' type='nominal' />
      <column caption='Fado Type' datatype='string' name='[fado_type]' role='dimension' type='nominal' />
      <column caption='First Name' datatype='string' name='[first_name]' role='dimension' type='nominal' />
      <column caption='Last Name' datatype='string' name='[last_name]' role='dimension' type='nominal' />
      <column caption='Mayor' datatype='string' name='[mayor]' role='dimension' type='nominal' />
      <column caption='Month Closed' datatype='integer' name='[month_closed]' role='dimension' type='quantitative' />
      <column caption='Month Received' datatype='integer' name='[month_received]' role='dimension' type='quantitative' />
      <column caption='Mos Age Incident' datatype='integer' name='[mos_age_incident]' role='measure' type='quantitative' />
      <column caption='Mos Ethnicity' datatype='string' name='[mos_ethnicity]' role='dimension' type='nominal' />
      <column caption='Mos Gender' datatype='string' name='[mos_gender]' role='dimension' type='nominal' />
      <column caption='Outcome Description' datatype='string' name='[outcome_description]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[precinct]' role='dimension' semantic-role='' type='ordinal' />
      <column caption='Rank Abbrev Incident' datatype='string' name='[rank_abbrev_incident]' role='dimension' type='nominal' />
      <column caption='Rank Abbrev Now' datatype='string' name='[rank_abbrev_now]' role='dimension' type='nominal' />
      <column caption='Rank Incident' datatype='string' name='[rank_incident]' role='dimension' type='nominal' />
      <column caption='Rank Now' datatype='string' name='[rank_now]' role='dimension' type='nominal' />
      <column caption='Unique Mos Id' datatype='integer' name='[unique_mos_id]' role='dimension' type='ordinal' />
      <column caption='Year Closed' datatype='integer' name='[year_closed]' role='dimension' type='quantitative' />
      <column caption='Year Received' datatype='integer' name='[year_received]' role='dimension' type='quantitative' />
      <column-instance column='[allegation - Split 1]' derivation='None' name='[none:allegation - Split 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[allegation]' derivation='None' name='[none:allegation:nk]' pivot='key' type='nominal' />
      <column-instance column='[complainant_ethnicity]' derivation='None' name='[none:complainant_ethnicity:nk]' pivot='key' type='nominal' />
      <column-instance column='[fado_type]' derivation='None' name='[none:fado_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[mayor]' derivation='None' name='[none:mayor:nk]' pivot='key' type='nominal' />
      <column-instance column='[mos_gender]' derivation='None' name='[none:mos_gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[precinct]' derivation='None' name='[none:precinct:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Allegation - Split 1,Fado Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:allegation - Split 1:nk]' />
          <groupfilter function='level-members' level='[none:fado_type:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Allegation,Fado Type)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:allegation:nk]' />
          <groupfilter function='level-members' level='[none:fado_type:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Mayor,Precinct)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:mayor:nk]' />
          <groupfilter function='level-members' level='[none:precinct:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:mayor:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Bloomberg&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;DeBlasio&quot;</bucket>
            </map>
            <map to='#f6bc58'>
              <bucket>&quot;Giuliani&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:allegation:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;curse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;gun pointed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;premises entered and/or searched&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;retaliatory arrest&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;threat of summons&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;action&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;frisk and/or search&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;nonlethal restraining device&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;refusal to process civilian complaint&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;sexual orientation&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;beat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gesture&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;physical disability&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;refusal to show arrest warrant&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;strip-searched&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;electronic device information deletion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;hit against inanimate object&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;punch/kick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;search of premises&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;threat to property&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;demeanor/tone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;gun pointed/gun drawn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;profane gesture&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;retaliatory summons&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;threat re: removal to hospital&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;black&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;gun as club&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;physical force&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;refusal to show search warrant&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;threat of arrest&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;forcible removal to hospital&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;nightstick as club (incl asp &amp; baton)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;radio as club&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;sexist remark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;word&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;animal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;gay/lesbian slur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pepper spray&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;refusal to provide name&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;sh refuse cmp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;failure to provide rtka card&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;mace&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;questioned immigration status&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;sex miscon (sexual harassment, verbal)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;vehicle stop&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;body cavity searches&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gun drawn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;police shield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;religion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;threat of force&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;entry of premises&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;improper dissemination of medical info&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;push/shove&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;search of recording device&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;vehicle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ethnicity&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;interference with recording&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;question&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;seizure of property&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;vehicle search&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;flashlight as club&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;nasty words&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;race&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;sex miscon (sexual/romantic proposition)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;white&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;frisk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;nightstick/billy/club&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;refusal to obtain medical treatment&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;sexual misconduct (sexual humiliation)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;detention&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;handcuffs too tight&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;property damaged&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;rude gesture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;threat to damage/seize property&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;chokehold&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;gun fired&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;premise searched&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;restricted breathing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;threat of force (verbal or physical)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;arrest/d. a. t.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;gender&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;person searched&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;refusal to provide name/shield number&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;slap&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;failed to obtain language interpretation&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;jewish&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;question and/or stop&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sex miscon (sexual harassment, gesture)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;vehicle searched&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;dragged/pulled&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hispanic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;property seized&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;search (of person)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;threat to notify acs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;arrest/onlooker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;gender identity&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;photography/videography&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;refusal to provide shield number&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;stop&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:fado_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Abuse of Authority&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Offensive Language&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Force&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Discourtesy&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:complainant_ethnicity:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;American Indian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other Race&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Hispanic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:mos_gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;F&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='&quot;New York&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_policedata.csv' id='cleaned_policedata.csv_F9167300AE8F4EAABDFDCD7C19076F70'>
            <properties context=''>
              <relation connection='textscan.1u399vw054suiz1743acg18jntma' name='cleaned_policedata.csv' table='[cleaned_policedata#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='unique_mos_id' ordinal='0' />
                  <column datatype='string' name='first_name' ordinal='1' />
                  <column datatype='string' name='last_name' ordinal='2' />
                  <column datatype='string' name='command_now' ordinal='3' />
                  <column datatype='integer' name='complaint_id' ordinal='4' />
                  <column datatype='integer' name='month_received' ordinal='5' />
                  <column datatype='integer' name='year_received' ordinal='6' />
                  <column datatype='integer' name='month_closed' ordinal='7' />
                  <column datatype='integer' name='year_closed' ordinal='8' />
                  <column datatype='string' name='command_at_incident' ordinal='9' />
                  <column datatype='string' name='rank_abbrev_incident' ordinal='10' />
                  <column datatype='string' name='rank_abbrev_now' ordinal='11' />
                  <column datatype='string' name='rank_now' ordinal='12' />
                  <column datatype='string' name='rank_incident' ordinal='13' />
                  <column datatype='string' name='mos_ethnicity' ordinal='14' />
                  <column datatype='string' name='mos_gender' ordinal='15' />
                  <column datatype='integer' name='mos_age_incident' ordinal='16' />
                  <column datatype='string' name='complainant_ethnicity' ordinal='17' />
                  <column datatype='string' name='complainant_gender' ordinal='18' />
                  <column datatype='real' name='complainant_age_incident' ordinal='19' />
                  <column datatype='string' name='fado_type' ordinal='20' />
                  <column datatype='string' name='allegation' ordinal='21' />
                  <column datatype='real' name='precinct' ordinal='22' />
                  <column datatype='string' name='contact_reason' ordinal='23' />
                  <column datatype='string' name='outcome_description' ordinal='24' />
                  <column datatype='string' name='board_disposition' ordinal='25' />
                  <column datatype='string' name='borough' ordinal='26' />
                  <column datatype='string' name='mayor' ordinal='27' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Color Coded by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_policedata' name='federated.1iqnmt20t2zpno1cema5w0s79047' />
          </datasources>
          <datasource-dependencies datasource='federated.1iqnmt20t2zpno1cema5w0s79047'>
            <column caption='Allegation' datatype='string' name='[allegation]' role='dimension' type='nominal' />
            <column-instance column='[allegation]' derivation='Count' name='[cnt:allegation:qk]' pivot='key' type='quantitative' />
            <column caption='Fado Type' datatype='string' name='[fado_type]' role='dimension' type='nominal' />
            <column-instance column='[allegation]' derivation='None' name='[none:allegation:nk]' pivot='key' type='nominal' />
            <column-instance column='[fado_type]' derivation='None' name='[none:fado_type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1iqnmt20t2zpno1cema5w0s79047].[Exclusions (Allegation,Fado Type)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:allegation:nk]' />
                <groupfilter function='level-members' level='[none:fado_type:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:fado_type:nk]' member='&quot;Abuse of Authority&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;arrest/d. a. t.&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;arrest/onlooker&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;body cavity searches&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;detention&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;electronic device information deletion&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;entry of premises&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;failed to obtain language interpretation&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;failure to provide rtka card&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;forcible removal to hospital&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;frisk and/or search&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;gun drawn&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;gun pointed&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;gun pointed/gun drawn&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;improper dissemination of medical info&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;interference with recording&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;person searched&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;photography/videography&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;premise searched&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;premises entered and/or searched&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;property damaged&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;property seized&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;question&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;question and/or stop&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;questioned immigration status&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;refusal to obtain medical treatment&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;refusal to process civilian complaint&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;refusal to provide name&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;refusal to provide shield number&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;refusal to show arrest warrant&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;refusal to show search warrant&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;retaliatory arrest&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;retaliatory summons&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;search of premises&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;search of recording device&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;seizure of property&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;sex miscon (sexual harassment, gesture)&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;sex miscon (sexual harassment, verbal)&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;sex miscon (sexual/romantic proposition)&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;sexual misconduct (sexual humiliation)&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;sh refuse cmp&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;stop&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;strip-searched&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;threat of arrest&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;threat of force&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;threat of force (verbal or physical)&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;threat of summons&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;threat re: removal to hospital&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;threat to damage/seize property&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;threat to notify acs&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;threat to property&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;vehicle search&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;vehicle searched&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;vehicle stop&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:fado_type:nk]' member='&quot;Discourtesy&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;action&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;curse&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;demeanor/tone&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;gay/lesbian slur&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;gesture&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;nasty words&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;profane gesture&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;rude gesture&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;sexist remark&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:fado_type:nk]' member='&quot;Force&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;animal&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;beat&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;chokehold&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;dragged/pulled&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;flashlight as club&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;gun as club&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;gun fired&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;gun pointed&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;handcuffs too tight&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;hit against inanimate object&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;mace&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;nightstick as club (incl asp &amp; baton)&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;nightstick/billy/club&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;nonlethal restraining device&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;pepper spray&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;police shield&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;punch/kick&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;push/shove&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;radio as club&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;restricted breathing&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;slap&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;vehicle&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:fado_type:nk]' member='&quot;Offensive Language&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;black&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;ethnicity&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;gender&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;gender identity&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;hispanic&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;jewish&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;physical disability&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;religion&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;sexual orientation&quot;' />
                      <groupfilter function='member' level='[none:allegation:nk]' member='&quot;white&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:allegation:nk]' />
                  <hierarchy name='[none:fado_type:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]'>
            <groupfilter function='level-members' level='[none:fado_type:nk]' />
          </filter>
          <slices>
            <column>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]</column>
            <column>[federated.1iqnmt20t2zpno1cema5w0s79047].[Exclusions (Allegation,Fado Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation:qk]' />
              <text column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]' />
              <color column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B0B39B8F-3BC7-476A-9992-3FA6B56626B4}' />
    </worksheet>
    <worksheet name='Complaints by Borough'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_policedata' name='federated.1iqnmt20t2zpno1cema5w0s79047' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1iqnmt20t2zpno1cema5w0s79047'>
            <column caption='Borough' datatype='string' name='[borough]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[complaint_id]' derivation='Count' name='[cnt:complaint_id:qk]' pivot='key' type='quantitative' />
            <column caption='Complaint Id' datatype='integer' name='[complaint_id]' role='dimension' type='ordinal' />
            <column-instance column='[borough]' derivation='None' name='[none:borough:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[Longitude (generated)]' field-type='quantitative' max='-8196156.5539828418' min='-8274780.4852748951' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[Latitude (generated)]' field-type='quantitative' max='4995558.4125410467' min='4946309.3900251593' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' field-type='quantitative' max='12200' max-size='1' min='1000' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' num-steps='3' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='satellite' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='area-red-light' />
            <format attr='geo-area-type' value='County' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' />
              <text column='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' />
              <text column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:borough:nk]' />
              <lod column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:borough:nk]' />
              <lod column='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.0635185241699219' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1iqnmt20t2zpno1cema5w0s79047].[Latitude (generated)]</rows>
        <cols>[federated.1iqnmt20t2zpno1cema5w0s79047].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{166E93FC-6C04-40EE-B5A0-FF5EFF250F81}' />
    </worksheet>
    <worksheet name='Count of Complaints by Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_policedata' name='federated.1iqnmt20t2zpno1cema5w0s79047' />
          </datasources>
          <datasource-dependencies datasource='federated.1iqnmt20t2zpno1cema5w0s79047'>
            <column-instance column='[fado_type]' derivation='Count' name='[cnt:fado_type:qk]' pivot='key' type='quantitative' />
            <column caption='Fado Type' datatype='string' name='[fado_type]' role='dimension' type='nominal' />
            <column-instance column='[fado_type]' derivation='None' name='[none:fado_type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:fado_type:qk]</rows>
        <cols>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]</cols>
      </table>
      <simple-id uuid='{FB56B170-2212-40C6-B842-581EFF0D2711}' />
    </worksheet>
    <worksheet name='Number of Complaints against Officers'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_policedata' name='federated.1iqnmt20t2zpno1cema5w0s79047' />
          </datasources>
          <datasource-dependencies datasource='federated.1iqnmt20t2zpno1cema5w0s79047'>
            <column-instance column='[complaint_id]' derivation='Count' name='[cnt:complaint_id:qk]' pivot='key' type='quantitative' />
            <column caption='Complainant Ethnicity' datatype='string' name='[complainant_ethnicity]' role='dimension' type='nominal' />
            <column caption='Complaint Id' datatype='integer' name='[complaint_id]' role='dimension' type='ordinal' />
            <column caption='Mos Ethnicity' datatype='string' name='[mos_ethnicity]' role='dimension' type='nominal' />
            <column caption='Mos Gender' datatype='string' name='[mos_gender]' role='dimension' type='nominal' />
            <column-instance column='[complainant_ethnicity]' derivation='None' name='[none:complainant_ethnicity:nk]' pivot='key' type='nominal' />
            <column-instance column='[mos_ethnicity]' derivation='None' name='[none:mos_ethnicity:nk]' pivot='key' type='nominal' />
            <column-instance column='[mos_gender]' derivation='None' name='[none:mos_gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:complainant_ethnicity:nk]' member='&quot;Asian&quot;' />
              <groupfilter function='member' level='[none:complainant_ethnicity:nk]' member='&quot;Black&quot;' />
              <groupfilter function='member' level='[none:complainant_ethnicity:nk]' member='&quot;Hispanic&quot;' />
              <groupfilter function='member' level='[none:complainant_ethnicity:nk]' member='&quot;White&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:mos_ethnicity:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:mos_ethnicity:nk]' />
              <groupfilter function='member' level='[none:mos_ethnicity:nk]' member='&quot;American Indian&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk]</column>
            <column>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:mos_ethnicity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' field-type='quantitative' major-origin='0' major-spacing='2000' max='9000' min='0' minor-origin='0' minor-show='false' minor-spacing='100' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' scope='rows' value='Total Complaints' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:mos_gender:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]</rows>
        <cols>([federated.1iqnmt20t2zpno1cema5w0s79047].[none:mos_ethnicity:nk] / ([federated.1iqnmt20t2zpno1cema5w0s79047].[none:mos_gender:nk] / [federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk]))</cols>
      </table>
      <simple-id uuid='{DFEE2928-1C59-4DB6-B38A-476EBFEB55FD}' />
    </worksheet>
    <worksheet name='Precinct 75 Allegations &amp; Type of Complaints'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_policedata' name='federated.1iqnmt20t2zpno1cema5w0s79047' />
          </datasources>
          <datasource-dependencies datasource='federated.1iqnmt20t2zpno1cema5w0s79047'>
            <column caption='Allegation - Split 1' datatype='string' name='[allegation - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1iqnmt20t2zpno1cema5w0s79047].[allegation]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [allegation], &quot;&apos; &apos;&quot;, 1 ) )' />
            </column>
            <column caption='Allegation' datatype='string' name='[allegation]' role='dimension' type='nominal' />
            <column-instance column='[allegation - Split 1]' derivation='Count' name='[cnt:allegation - Split 1:qk]' pivot='key' type='quantitative' />
            <column caption='Fado Type' datatype='string' name='[fado_type]' role='dimension' type='nominal' />
            <column-instance column='[allegation - Split 1]' derivation='None' name='[none:allegation - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[fado_type]' derivation='None' name='[none:fado_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[precinct]' derivation='None' name='[none:precinct:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[precinct]' role='dimension' semantic-role='' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1iqnmt20t2zpno1cema5w0s79047].[Exclusions (Allegation - Split 1,Fado Type)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:allegation - Split 1:nk]' />
                <groupfilter function='level-members' level='[none:fado_type:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:fado_type:nk]' member='&quot;Abuse of Authority&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;arrest/d. a. t.&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;electronic device information deletion&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;entry of premises&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;failed to obtain language interpretation&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;failure to provide rtka card&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;forcible removal to hospital&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;frisk and/or search&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;gun drawn&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;interference with recording&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;person searched&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;photography/videography&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;premise searched&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;property damaged&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;question&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;question and/or stop&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;refusal to obtain medical treatment&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;refusal to process civilian complaint&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;refusal to provide name&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;refusal to provide shield number&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;refusal to show arrest warrant&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;refusal to show search warrant&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;retaliatory arrest&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;retaliatory summons&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;search of premises&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;search of recording device&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;seizure of property&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;strip-searched&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;threat of force&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;threat of force (verbal or physical)&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;threat of summons&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;threat re: removal to hospital&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;threat to damage/seize property&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;threat to notify acs&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;vehicle searched&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:fado_type:nk]' member='&quot;Discourtesy&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;action&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;curse&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;nasty words&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:fado_type:nk]' member='&quot;Force&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;chokehold&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;dragged/pulled&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;flashlight as club&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;gun as club&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;gun fired&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;handcuffs too tight&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;hit against inanimate object&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;mace&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;nightstick as club (incl asp &amp; baton)&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;nightstick/billy/club&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;nonlethal restraining device&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;pepper spray&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;police shield&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;punch/kick&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;push/shove&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;restricted breathing&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;slap&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;vehicle&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:fado_type:nk]' member='&quot;Offensive Language&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;black&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;ethnicity&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;gender&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;hispanic&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;race&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;religion&quot;' />
                      <groupfilter function='member' level='[none:allegation - Split 1:nk]' member='&quot;sexual orientation&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:allegation - Split 1:nk]' />
                  <hierarchy name='[none:fado_type:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:precinct:ok]'>
            <groupfilter function='member' level='[none:precinct:ok]' member='75.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:precinct:ok]</column>
            <column>[federated.1iqnmt20t2zpno1cema5w0s79047].[Exclusions (Allegation - Split 1,Fado Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#000000' />
            <format attr='width' value='870' />
            <format attr='height' value='498' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='font-weight' data-class='total' value='bold' />
            <format attr='color' data-class='subtotal' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]' value='#ffffff' />
            <format attr='background-color' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
            <format attr='color' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]' value='#f5f5f5' />
            <format attr='text-align' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]' value='auto' />
            <format attr='font-size' scope='cols' value='14' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation - Split 1:qk]' num-steps='8' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='15' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation - Split 1:qk]' />
              <size column='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation - Split 1:qk]' />
              <text column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation - Split 1:nk]' />
              <text column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation - Split 1:nk]>]]></run>
                <run fontalignment='0'>Æ&#10;</run>
                <run fontalignment='0' fontcolor='#ffffff' fontsize='14' italic='true'><![CDATA[<[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-weight' value='bold' />
                <format attr='font-family' value='HoloLens MDL2 Assets' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation - Split 1:qk]</field>
                  <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation - Split 1:nk]</field>
                  <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>104</value>
                <value>&quot;refusal to provide name/shield number&quot;</value>
                <value>&quot;Abuse of Authority&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{1D4182B5-81F6-46A4-A6BD-99AB3E7B062A}' />
    </worksheet>
    <worksheet name='Total Complaints Per Mayor'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Complaints Per Mayor</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_policedata' name='federated.1iqnmt20t2zpno1cema5w0s79047' />
          </datasources>
          <datasource-dependencies datasource='federated.1iqnmt20t2zpno1cema5w0s79047'>
            <column-instance column='[complaint_id]' derivation='Count' name='[cnt:complaint_id:qk]' pivot='key' type='quantitative' />
            <column caption='Complaint Id' datatype='integer' name='[complaint_id]' role='dimension' type='ordinal' />
            <column caption='Mayor' datatype='string' name='[mayor]' role='dimension' type='nominal' />
            <column-instance column='[mayor]' derivation='None' name='[none:mayor:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' scope='rows' value='Total Complaints (during term)' />
            <encoding attr='space' class='0' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' field-type='quantitative' max='19000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:mayor:nk]' />
              <text column='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]</rows>
        <cols>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:mayor:nk]</cols>
      </table>
      <simple-id uuid='{86494B26-E3C1-43F3-96E7-FC0B2CDD149F}' />
    </worksheet>
    <worksheet name='Types of Complaints by Race'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_policedata' name='federated.1iqnmt20t2zpno1cema5w0s79047' />
          </datasources>
          <datasource-dependencies datasource='federated.1iqnmt20t2zpno1cema5w0s79047'>
            <column caption='Allegation' datatype='string' name='[allegation]' role='dimension' type='nominal' />
            <column-instance column='[complainant_ethnicity]' derivation='Count' name='[cnt:complainant_ethnicity:qk]' pivot='key' type='quantitative' />
            <column caption='Complainant Ethnicity' datatype='string' name='[complainant_ethnicity]' role='dimension' type='nominal' />
            <column-instance column='[allegation]' derivation='None' name='[none:allegation:nk]' pivot='key' type='nominal' />
            <column-instance column='[complainant_ethnicity]' derivation='None' name='[none:complainant_ethnicity:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]'>
            <groupfilter expression='COUNT([allegation]) &gt;= 323' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:allegation:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:complainant_ethnicity:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:complainant_ethnicity:nk]' member='%null%' />
                <groupfilter function='member' level='[none:complainant_ethnicity:nk]' member='&quot;American Indian&quot;' />
                <groupfilter from='&quot;Other Race&quot;' function='range' level='[none:complainant_ethnicity:nk]' to='&quot;Unknown&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]</column>
            <column>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]</rows>
        <cols>([federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk] * [federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complainant_ethnicity:qk])</cols>
      </table>
      <simple-id uuid='{F9F1E92A-23D4-4BC7-A6BD-683A48CEA236}' />
    </worksheet>
    <worksheet name='allegations word count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Allegations by Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_policedata' name='federated.1iqnmt20t2zpno1cema5w0s79047' />
          </datasources>
          <datasource-dependencies datasource='federated.1iqnmt20t2zpno1cema5w0s79047'>
            <column caption='Allegation' datatype='string' name='[allegation]' role='dimension' type='nominal' />
            <column-instance column='[allegation]' derivation='Count' name='[cnt:allegation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[allegation]' derivation='None' name='[none:allegation:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation:qk]' included-values='in-range-or-null'>
            <min>323</min>
          </filter>
          <filter class='categorical' column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:allegation:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:allegation:nk]' member='&quot;pepper spray&quot;' />
                <groupfilter function='member' level='[none:allegation:nk]' member='&quot;question&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation:qk]</column>
            <column>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation:qk]' num-steps='3' palette='red_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation:qk]' />
              <color column='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation:qk]' />
              <text column='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation:qk]</field>
                  <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>556</value>
                <value>&quot;strip-searched&quot;</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{83D2F998-87B1-42E9-91CB-4A38515E19AB}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Total Complaints Per Mayor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:mayor:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complaint_id:ok]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:mayor:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49F40428-20E0-409B-AE35-32AE333223FA}' />
    </window>
    <window class='worksheet' name='Count of Complaints by Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation - Split 3:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB5B0C99-0FDA-4B47-AED8-D4BC6DCFC2DC}' />
    </window>
    <window class='worksheet' name='Color Coded by Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6919526-17E5-4C00-BA83-6DE02EA7F661}' />
    </window>
    <window class='worksheet' name='allegations word count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation - Split 1:qk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation - Split 2:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F723B974-F680-4AAE-9E6F-1CC39E76F062}' />
    </window>
    <window class='worksheet' maximized='true' name='Precinct 75 Allegations &amp; Type of Complaints'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation - Split 1:qk]' type='color' />
            <card param='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:allegation - Split 1:qk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation - Split 1:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:fado_type:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:precinct:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45AF89E4-C53D-4F5C-891B-C92985618DBC}' />
    </window>
    <window class='worksheet' name='Complaints by Borough'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1iqnmt20t2zpno1cema5w0s79047].[cnt:complaint_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:borough:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complaint_id:ok]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:precinct:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD0144E4-AFCE-4418-B1A5-7C51CABCC561}' />
    </window>
    <window class='worksheet' name='Types of Complaints by Race'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:allegation:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71BC0E57-28E9-4861-9AB7-98BCA9B92FE2}' />
    </window>
    <window class='worksheet' name='Number of Complaints against Officers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
            <card type='pages' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1iqnmt20t2zpno1cema5w0s79047].[none:mos_gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_ethnicity:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complainant_gender:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:complaint_id:ok]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:mos_ethnicity:nk]</field>
            <field>[federated.1iqnmt20t2zpno1cema5w0s79047].[none:mos_gender:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BC482B19-2A59-49CF-9320-FD296F1A4029}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Color Coded by Type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXhcZ33vP2eZXdJIGu2SZUnebVne4tiNl+wBQhqyNEsD3Jb1oQv09l64
      dLv0FkjhFgrlBkrTNhRCKBBKCCHEBEjieIsd73ZsS9Yuax1pRtLsy1nuH7IVK5ZkSZ7Vcz7P
      k9genXnPbzTv97zbbxF0XdcxMMhRxHQbYGCQTgwBGOQ0hgAMchpDAAY5jSEAg5zGEIBBTmMI
      wCCnMQRgkNMYAjDIaQwBGOQ0hgAMchpDAAY5jSEAg5zGEIBBTmMIwCCnMQRgkNMYAjDIaQwB
      GOQ0hgAMchpDAAY5jSEAg5zGEIBBTmMIwCCnMQRgkNMYAjDIaeR0G3CJuSSoEwQhBZYY5BJp
      E4CuKuihETRvB5qnHc3Xj+7rQwuPoodHQVMnLhRlBJMVwVGKmFeB4KxBLKpFLG5ALKhGkC3p
      +ggG1wFCqnKD6rqGHhlHGzyN0nsYtXMPWnAEon7Qtfk3aLIjOEqRqtYj1+1AqrkBwV6MIBiz
      OoO5k3QB6JqK5j5L/MzzKO2voQfdybmRtRC5ZjPyqnuQ67YbI4PBnEiaAHQlitpzkOihJ9GG
      zoCuJuM20yAgFFRhvvGjmJa9C8FakKL7GmQjCReAriqoPW8QO/zvqP0nUtjxr0RwLsK86Q8x
      rXkfgmxNmx0GmUtCBaB6O4kdeAKl7bcLm9cnCbF0JZadn0Gu3ZJuUwwyjIQIQFeixM/9guje
      f5xY1GYikhnThvdj2fxRBKsz3dYYZAjXJABd19HDo0Rf/78oLbsy6qk/E2L5Gqx3fRGpZFm6
      TTHIAK5JAOpoF5Ff/DmapzWRNiUfSz62d38ZqX6HsW2a4yxYAErPQSK/+qvkbWsmG9mGZeen
      MTU9ZIggh1mQAJTeI4Rf/O8QHkuGTalDNGG55bOYmh4x3CxylHkLQOk9QviFT0HUlyybUoyA
      5ba/MUaCHGVe37jqaSOy67PXUecH0Im+/uWJRbxBzjFnAWjhMSK//DR6YCiZ9qQHNU7klS9O
      HNwZ5BRzEoCuRIm++kU0T1uy7UkfMT/hl/8KLeRNtyUGKeSqAtB1nfi5F1Baf50Ke9KKPtZD
      dPeX0NVYuk0xSBFXFYDmaSe675+y4pArESjnf22sB3KIWQWgayrRfV+DyHiq7Ek/ukp03zfQ
      s32L12BOzCoApWM3aueeVNmSMehBN9E3/3VOYZoG2c2MAtDjIWKHnkylLRlF/NSzaKOd6TbD
      IMnMKACl43U097lU2pJZKBHiR582RoHrnGkFoGsqsSPfAXL7y4+3vow+3ptuMwySyLQCULsP
      oA2fT7UtmUfUT7z5xXRbYZBErhCAruvEz7+c1lDGTCJ++r/Qc2QLOBe5cgSIBVE7X0+DKZmJ
      HhhC7TuabjMMksQVAlB635xITGUwiXL++j8Fz1WmCEDXdZT219JlS8ai9hxEj4XSbYZBEpg6
      AsSDqL2H02RK5qL5+tGuRy9Yg6kC0PxD6MGRdNmSuahRtKG30m2FQRKYKoDRLlAiaTIlszFi
      Ba5PpgpguDlddmQ8mrcj3SYYJIGpAhjrSZcdGY821oOuKek2wyDBTKkPoPn602VHxqMrEfSI
      D8FenG5TsgItFkOPRkFR0FUVwWJBMJsRLZmVtXuKAIwF8CyoMfTIGBgCAC5mBYxGUYaHUfoH
      iHV0oAwNoQwPo46OoUUioGmXLgZBAFFEkGXkEhdSUTFyRQWmxYsw19Uhu1yIDkfKP8fUCjFK
      OOUGzJf+8ThVTlPqb6ypoOR2qKSu62iBAJFTp4mcPk205TzKyDDE5z411IGYzwdc5mouisgl
      JZiXNGBZtQrb5huQnE4EMflpaqaOANFA0m84HYqmE4hqBKMaxXaJmKrTNxZHEgWqnDJuv0KR
      XeLsYJSxkErV2jQIQNdBi6f+vhmAFg4TOXuW4J69RI6fQI8l+EGgaShuN4rbTeiNg4z+x3ex
      rFyJY8c27Fu2JHVkyJgieUe7w4wEFWoKTSiaji+soQM93hiSKNAxEqPOZSYcMxzTUoGu62h+
      P8F9+wi8/BsUt3viIZCamxM9d47ouXOM//Q57Fu2kHfHHciVFQnP4DdFAIJsRU/DOYAsCkQU
      jcXFZt7sCvHwRifPn/QhiQJrqiw0Vlk50RvhcHcYu9lIYZhstHCY4O7X8b34IqonvWliVI8X
      /0u7CLz6Go4d2ym4733ILlfC2p+SGjHw1LvQfX0Ja3w+aLqOwMQcUQA0feLPywWv6iAKIKYj
      j6dsxf7Yj5BcS1N/7xShKwrB/QcY//GzqN7MzI8kWK04f+9B8u64HdF67VV/po4AtqK0CeBS
      p77UtaVp+riczoe/ZEIw56fRgOQS7+tn9OnvE3nrNKiZO83UIxHGnvkBoQMHKPzgB7GsXHFN
      06Ipy2xjj3tmBMmEYLv+KsvomkZw/wGGPve3RE6ezOjOfzmxjk7cj/89vp+/gB5f+ObEFAGI
      xfXXbNj1iuAou+4K7WnBIN6nvoPnW/+MFgym25z5oyiM/+jHDH/lqygjngU1MVUAhYsTYtf1
      iOhakm4TEori9TL81a8RfOXVtw+sspTIqdO4H3+cWFfXvN87RQBSyXLenoUbXI5UujLdJiSM
      eF8fw1/+B6Lnrp+0N8rAIO7Hv0T4+PF5vW/qGsBZg+BI3BbT9YRY2ZRuE64ZXdeJtrcz8vV/
      It5z/Tk+an4/I098k9Cbb845n9PUKZCjBLGoISnGZTOCoxSxKPvXR8rQEJ5v/jPx3vTs9KUC
      PRTG8y9PEjkxt/iNK5wt5PodCTcq2xEr1iLYCtNtxjWhjIww8o9fRxkYSLcpSUcPhfF869tE
      268ew3GlAJbcBkatrCnIdduvWj9M13UUVcMfiuIeDdLe5+VMp5sznW7OdQ8z5A0wFogQiSop
      T7eoRSJ4n/xX4hcupPS+6UQLBBj5xv9DHZs9y/cVvkBCQTVieSPa4KmkGZdVSBbkpbfP+OOx
      QITjrQOc6Ryme2icAY+fQCg2bVJJs0mi1GmnqiSfdUsrWFVbQkNVEaKYvI0HXVUZ//GzRE7n
      Xkyz6nYz8s1vUfqZT88Yh3ClACQZ06p7iBoCAEBefheiferGQDAc4+j5AXaf6OJM5zCR2Nzc
      gWNxlb4RP30jfg439yOKAhVFedy8fjG3rK+jwpWXcPtDbxzE/6uXE95uthB96wzjz/6Eog9+
      YNqfT1smVQt5CX3/fvTQwg4XrhtEGdu9T0yuiyIxhdeOd/LigVb6hn0JTR1clG/l/Xes5ZYN
      dZhkKSFtKsPDDP3dF1BHcjvQSTCZKP3s/8LauObKn81UJzjy+j8QP/Z00o3LZMSKJuwPfw9d
      kDnT5ea7u07S1pdcJ7Fl1cV84F1NrF9acU3t6KqK55vfIvTGwQRZlt3I1dVUfOHvEO32Ka/P
      uLIzr38MLAVJNyxzETBv/jAxVeA/dp3g89/bk/TOD9Da5+Xxp/fyvV+dIBxduI9L+OgxQgcP
      JdCy7Ebp68O/61dXvD6jAERnDeamh5JqVCYjVW8kWHojX/rBPl7Y30Isnrps2TFF5bk9zXzp
      mX14xuefklELhxn/6XOpC2DJEnwvvUT8HdvAs+7tmW/4CIKjLKlGZSSSmYGGD/LZf9vD8dbB
      tJlxsn2Iv/73V+kb8c/rfcH9+4l3dyfJquxFD4bwPf/zKa/Nvrltycey/c9ASMyiLFsYLr2Z
      L78aYtCbnhjpyxnwBHj86T0MeOZmixYO4/+lUeZ1JkJvHCTe9/ZJ+KwCEAQBeeV7kXLodNgv
      l/GN7k24xzInG3TfiJ+/f2YvY4Grh6sGDxxAGUzfqJXp6LEY/l0vTx5GXvXIVxBlrLf9DUJB
      ddKNSzdxXeLfxt9Nly9jcgVM0jM0zhM/PYQyS8CKHo8T+O0rxtz/KoQOHkQbn6h9PSefBzG/
      Auttfw2SOamGpRMNgV3R7RwLLUq3KTNypGWAn+05N6MrRayzk3iXMfe/GlogQOjwEWCOAgCQ
      63di2fE/rls/of6Crfw8tJ1Mj4f4ye6zM27HBvftN57+cyS0/wC6ps1dAACmdb+PefNHrzsR
      6FU38qP4vUTVzO78ANG4yjO/PoX6jqmQGggQnqMLsAFE29qIdXXNTwCCKGHe+gnkNfeT6U/K
      uSKWraZ15ac53Zs5i96rcarDzfG2qQvdeHcP6nBuuzzMC0Uh1t4xPwEACJIZ6+2fw3TDh7N+
      e1SquQHLff/CTw8NoGrZM3XQNJ1nXzuDdtl0J3T4sDH9mSehAwfmLwCYGAksN30S802fzM6F
      sSAir7gb271P0DUG53qy78nZ0uOho2+imqeu60RbWtJsUfYRbTm/MAHAhNu0efNHsL7ri2DJ
      onw5khnzlk9gvfP/IFjyef1EN1oWPf0vZ8/JiR0fzedD6b/+I70SznwXwe9EEATk5e/B8dgP
      ESvXJ8qspCE4F2G79wnMW/8IwWQnFI1zpCV7i4Icbu4nFIkT7+29puRQucw1b+cIgoBYWIv9
      gScxb/sUWDNwNJDMyKvvw/7w08h12yZT6Q2M+BnwzM/PJpMY9AbocY8THxjM+tw+6SJhR56C
      2YHlxo8jL7mN6P4nUNtfhYSGjCwMsXwN5i2fQG64+Yq43rPdI1m9btR0ndZeL+V912+Wh2ST
      8DN/ybUU2z1fQx16i9jhp1C79oGa4soqgohY0Yh504eQG25BkKYvqNE5MJpau5JAc/cwW43t
      zwWTFKcXQZSQK9ch3fN11IFTKM0vEm/5FUTHk3G7t5FtSNUbMTc9glR301Vzefa6fcm1JwX0
      u8fRAun3Ws1Wkur1JYgScvUG5OoNmG/6U9TOvSjtr6L2n0APJeipZbIjVa1HbrgVuX4HorNm
      Tm9TFI3hDPL4XChujx8lZAhgoaTM7VG0FSGuvhd55T0QD6AOt6L2HUUbOY/maUNXL9/F0NFU
      hUhUIRxTiKpMLicEyYSQX4G1Zj2O2vXkL2pCynMhiPP7KOFYHCUJC8eVtS4C4Ri9w1cursuL
      HAyNJjYLs6aqhPwhUll8VHTYAWHeGaXlykqUoSEArE1NxNra0j56pdzvVxBFsBQg12xCrtk0
      +bqu60RiCm19Xo4299Ha42YkEGQ8FCf8zh2+EbD0SuSfClPiPM3KWhfrllawpq4Us0maU8GE
      uKIlfP/fmWfhxlXVHG8dZHVdGR39XsIxhdWLS+kd9iFJAoX5VnrdPoKRxGxbqqpGKJACAQgC
      jh3bESxWoq3nsa5ejeLxoI6OEu/qxrxkCXJF+UQkmiyjjY9jbWwk2tqGefFilFEvgiyjDA9j
      rq/HXF8HqopUVkq8sxOppBQ9HEawWUFR0SJh5PJywm8eTmrq9rQ7vmuaztnuYXYf72LvqZ45
      59iJxlWi4yFGxkM094zw/L4W8mxmNq+sYtvaWpqWlGExpfbjjQeiHGsdxO0NMhaIEFc0bBaZ
      cDSOq8AGAsiiRFtv4oLrBQFkWYRkhywLAsrwMFoojJjnIHz4CJLLhTbuw759G+GjR5GKi5CK
      ikDTEfPyCB44gFRYhGCzYnEtJXYxTFMZ6CccjSCXlRM68AbWxkb0aIRoWxuWZcuInDmD84H7
      UUZGEKwWuB4FoKgax1sHeG5PM+cveGYN9JgrgXCM1453sft4F/WVhdy3YyVb19RMKwSrRUaW
      Eu/VOjwaJBCJEYpOjEKxuEpZkYPxQBSvP0xcUSlwWBj1J6YYoShJWO12iCZ/PWNevBhleJjo
      +VbQ1Mli2cTiaKEwuqKgeL3okSiqz4dt4ybiPT1owSCx7m40nx80DT0WRx33oQWC2DZtJHqu
      GUQBPRxGC4exrm0kfOwYcmUlWji5RRtnzAuUTDr7R/nBb09ztGVgikNXMli1uISP3rORpdVX
      ln/62Fd+gTvBc/JUU5Zv4fO+I8Q7O69+8TUiOuxowalCk0pc6OFIdlaYIcUjQDSusOtgGz/Z
      fZZAODVnA+e6R/jLJ1/hwZtXcd+OlVjNb3/kKlde9gvAlY+oJa+Q9OW8s/MDqAssTZQppCyy
      JRiJ8dUfHuB7vzqZss5/iZii8sNX3uLx7++ZkmdnUVkGum3Mk7rKYiRndqduTycpEcCQN8Bf
      PvkKbzb3J33KMxun2t187ju76RqcSJm9pLoobbYkihW1LkyV15ZGMZdJugAGvQEe//5euoeS
      fAo8R3qHfXz+u6/TOTDG2vryKVOibMNqllm+yIVcWZluU7KWpApg1B/m7zOo81/C4wvz5R/s
      Q9N1ltVkb23k2nInxfk2TNVVIGevkNNJ0gQQjMT4xn8dyrjOf4lBb4Cv/HA/m5Zn79Pz9o31
      mE0SpqoqpIJcTmS8cJIiAF3XeX5vS1rzas6F871ezvd6sVmy7+lpMUtsXTPh9ySYTJhqa9Ns
      UfYhFRUlRwAtPR5+tjc7atAePNNLidN+9QszjDs3NeB0vO0AYdu0MY3WZCe2TRsTL4BwNM6/
      //IYcSU7IpQ0Xcc9GkScg/9QppBnM3PvthVTfJ6saxsRZqiDZTA9llWrEi+APSe7aU2gr0sq
      iMbVpBaqSzTv/Z1llBdPrScml5Vhrs/+WsapQiwoSLwAgpEYP9+Xnek5ZEmkMG/2AJpMoLbc
      yb03rbjidUEUsW+5MQ0WZSfWdU3IxQleAxxu7p93MYdMIRJTWLW4BLt1+vDJTMBqlviT+zaT
      Z58+F5Nty43GNGguCAJ5N+8EErgLpOs6Lx9qT1RzaWHQG+Cx2xszcjokigLvv7OJlYtLZrxG
      KioyRoE5YK6rw7xsGZBAAQx4ApzrHk5Uc2mhc2CMVXWlPLhzVbpNmYIgwAM7VnL75nraPSMc
      utDN7o429nd3ctY9yFg4jK7rCIKA47ZbjUOx2RAEHLffOlk4O2G/qcPN/RmQBOXaOfDWBR67
      Yy2KqvH8vua0p00RBYHNjZXYKuHr+3cTiMbQ3/GbtsoyS4pLuKVhKTXLlmFb10T46LE0WZzZ
      yBUVOG7aNvnvhIwAmq5ztiu7n/6XONU+hCgIfOCuJh7cuYp07o4KAixbUUi4OMjh/h780egV
      nR8goiiccQ/y5JsH2NXagv2e94KU3YmLk4IgkP/euxHttsmXEiKAcCR+XeTYAXCPBhkNhJEl
      kfff1cT/fOQmHGlYGNvMMmvWFSGWxYjpcwsTVTSNPV3tPBscR9pqrAXeibmhAce2bVNeS4gA
      xoNRRhZQzzYT8YWieMbDwMT0Y/vaRXzxo7exYpErJRURBGHCxfnBu5ejOeMLmlY2jwyzf10j
      gj37TriThizjfOQhRNvUre6ECGBkPJRV+fVnQ9dhaPTtVB2CINBQVcQXPnorH793EwUzbEEm
      ggKHhY//7iY+8/7foTkweE2xE0dDAYZuuxkycEcrHTh27MDa2HjF6wlZBA+PJS+sUBDAYpLn
      nC1irkxka5i+Ta/vykBsi0nm7q3L2NFUy65Dbew91cMF93hCFsn5djObVlTxkbs3UOCw8GLz
      GQKx6DW3+0ZtNQ+saUQ9ffrajcxi5IpyCh99eCIlzzt/logbJCrHDUBFsYNAOD4ZNllXUchY
      IDIpAKtZZue6WvacnHsKlemoryyio3902jZ8oZk7X77dwsO3ruF921dwvHWQA29d4ETrIIFw
      bM6joCCAzWxiaU0xN6yoZNvaWlwFNgRBIByPc3owMbn++0JBwg/eh623F3X0+lijzRfBYqHo
      Q3+I5Jw+/DUhAojPktJEEgW2N9Uy5A0QVzRqSgs41THE2oZyRv1h/OEYFcV5eMZD1JQW4B4N
      smGZk95hH6c73BTn2+h1+7ipsQZREPGHoxTmTaziV9eVUunKo6XHQ3G+lXyHhfa+UZYvcjHk
      DVBVks+JtkHWNpSjaRq9I34aKosY9AYYGg1QVuSgZ5p4hegchGUxyWxdXcPW1TVomk5H/ygn
      2gY52z1M58AYvmAUURCQJIFKVz5Oh4USp50Sp53li1wsrS6mwHHlqe1QwI8vmphUIDrQLUvc
      9MefYOSrX5tIYZJLiCKFjz6Cbd26GS9J+omJfvF/hfk2FpUWMB6MUunKx2E1UVWSx9muYU61
      D7FuSTl7TnZTU1bAwbO9LCorQBAmTkDz7GbGA1F0IBiOcehsL5GYgiyJ7DnZzdbVNSwqc+Lx
      hSjMs9Le50XVdBZXFFJdUoBnPIQoCpQ67Rw620t9ZRHRmEqhY/olkEm++hZiXFHpH/FzusPN
      ma5hOvpH8YeiKKqGqumoqoYqgKIJuEeDCEBNaQENVUXUVRZO2/kBPKFgQuOm3cEAtnUbcT76
      CGPP/ADUZGfQyhwcN+8k7647Z70mIQKwW2beJhSYyMoQDMc41TFEpSufUX+YskIHnvEQ7tEQ
      kZhCz9A4O5pqOd/rJRJT8IyH0fWL743EsVtNSKJI9+DYZBxvns3MjqbFnGwbJBSNY7OY8PrD
      BMIxHFYTcUVlaDTA0upiNF2ne3CcWFzF6wtTlG+dcaozU8IsXdcJRxWOtPTz0sFW2vq8s7t9
      6xPvCYRjBMIx2vtH+cWB8zgdFratreWWDXUsryme4tYcnqHSS3B0lLZDh6lcvoyhtnacFeUA
      +NzDlNQuwt3RSfWa1bgWTU0OHFEm2st/112oHg/+F385s73XEdamtRT9wX9DuMp5SEIE4Jzh
      aQagajpvnOmd/HdLz0QemQHP1KSofSP+KY50fdGJv3cNjFGUZ+Vw89uljC6tOc52DTMWmJgu
      eHzhKe2FInFeO94FcEUW6H6PnyXVRfRNk8AWoDDvys8TV1ReO97Fs6+dueas0uPBKC8dbGXX
      oVY2LKvkA3eupaGqCEEQMM/whanxONWrVgACSjzOQMt5CisrWXXLTk7uehlJlolHrpw6mS62
      J4gihb//KFogSHD37muyP9Oxrmui5FOfQrRe3bs3IQIoLrBd/aIFMh6MMh6c/kl9qfMvhPa+
      mReFl/va67pOe/8oT714jOYeT0KnJ7oOx84PcKbTzb3bVvDYHWspstkRuLK2jsXhwGS1oaNj
      dTgoq6/DVlDA+f0HqNuwnv7mFqx5eVfcw2V7O2mWIEkUf+RDgE7w9T3XZVlVa2MjJZ/65MUM
      1lcnIQIoddqxmCWiseyfX5pkkfKiiU6j6Tp7T3bz7eePEE7wNuzlROMqP9vbjKpp3H/rSuwm
      M8H41ORhFsfbHXnVLTsn/15cUz3lz3dSXzw164VgMlH8kQ8jl5Ux/uxPEvURMgLblhtxffxj
      iI65Z8pLzBQoz8ri8kLOX8juNHkArgI7xfk2FFXjR6+8xXN7zqXkkE9RNZ7b00z/iJ/qZYWc
      H3Vfc5sldgeLC69M+yKYTBTcfx+S08noMz9AD4eneXcWIcvk3/0eCh9+CGGenrAJEYAsiSyr
      Kb4uBFBXUYjFLPP0yyd5YX9LymcJB8/2UR9wYqsT0K7Rv3ZHXQPWGTqEIAjk3X4bckUF3qee
      yto6w2Khk8JHH8Wxc8e0B11XfX+iDFm3pDxRTaWV9UvL+dmec/x8X+o7/yU6e8Zxd8eu6f71
      RS4219RetViIdc1qyv/332C/6SZYQAdKJ5aVKyn/28+Rd8vNC+r8kMBzgBtWVJFnMxG4opxL
      9mAxSaiazo9fO5NuUxjpiWHPk7C75v/FVuTl82jTBsQ5dgqpqAjXn/wRths2Mf7T51AyvOyq
      6HTifOB+HDfvnNNOz2wktD7Aky8c5aWDrYlqLuUsX+RiZDyE15cZc2JZFti6rQKP7pvzZGhJ
      sYuH126g0LawnTnV78f3wi8IvPIqeijDPHwlCfvWLRQ+8ghyWWlCmkyoANp6vfzVv71CNJ59
      u0GCMLEAzjS37vrKQj7x8AZe726na9Q74zZsqSOPHXUN3FC9CCkBUxl1bAzfL14k+PqetBey
      E6xWbOvXUfC+exOe+iWhAtA0na/86AAH3rqQqCZTiigIaU3fPhMf/91N3HVjA+5ggHbPCO6A
      n7CiYJJEim0O6ouKWVRYiEWS51QgcK7ouo46MkLozcMEXn0NZWAAklBZc1oEYSLIf/s2HDu2
      Y6quXvA8f9bbJLpEUkf/KJ/59m8SUvMrVQgCSKKYsTa7Cmx868/vxjaLy0my0aJRYm1thN44
      SPjosaR5l4oOB7aNG7BtvgHL6tVI0xzuJZKEC0DXdb676wTPZ1GCrNpyJwMj/lm9WmfDVWBD
      0/VZC985rCZCkYVFeAF88oEbueOGhgW+O3Houg6aRqyjg+jZc0TOnEEZGUEZHoEZ/JhmRJaR
      Cp2Yqqow19djbWzEvGI5gsmU0JFsNpJSJM8fivLZf/ltViTJKi20s6q2hD2neuZ0vSQKmE3S
      ZAnUSExh57rFnGofwjMenswpZLPIBCNxHFYTkZhCU0M5J9uHKM63kW830zU4ht1qIhxV5jTy
      rG0o4/MfuTXjcpjquo4eiaD5/KhjYyhuN4rHg+bzo8eiaLGJE21BFBHt9on/CguRS0uRK8oR
      7Q5Ehz0p05u5kBR36Hy7hT++fzNf+N6ehEdyJRKzLPGxezby1C+Pz/k9jQ1l5FnNmE0STUvK
      OXS2j8I8K4vKnFhMMlUl+ZhkkVKnnb2nerhvx0qGRoMMXHwYuJw2akoLcNjM5NvNiILA3jmI
      r63Py6BnIsYhkxAEAcFmQ7TZkMvLsKxYnm6T5kXSZLemrpQP370hI7OswYSb9u/f0UhVST7u
      eYR0XnKHjikqu4930dHvpaXHw4DHT3VJPq4CG10DY2i6Tn1lIee6R4gr6uSQPugJMBaIIDA/
      Z75wVLluMm9kEkkLiBEEgTs3N+ALRvjPV95Cy7Cg+XdvWcq921bw2rHOeZ24dg+OEVNUjjT3
      U+HKwx+O4Qt5iSkqsiRyvteDomicaB1i0OunvDgPXzBKXNFQVI2xYIT+ET8eX4jSQgedA2Nz
      vvep9iG2rTUKYSSSpEaEiYLAAzevQtN1fvTqmYwQgQDcubmBj92zEUkSueD2zev9l844onGV
      7sGp4ZSXt+W/GNP8zvZ1ncm10XzvnanlprKZpIdESqLIQ7esIc9m4T92HU9r4dNrkdQAAAXq
      SURBVAyTJPJ7t6zm925ZjXQx6uvyFCiZTrYX9c5EUrL0FkWBu7cu5S8e2z5r9FgycVhN/NlD
      W3j41jWTIY+qpjEWSG6geFG+FYtpIiqrvvLaClqPBSIZe1aRraQsjbAgCNywsop/+uS7+c5L
      x9l3qiclyXQFATYuq+Tjv7uJCtfUQxVN04krC3PbcDltNDWU4/GFGAtEqSjOw+sLsbi8kHM9
      IwgX27eYZTRNZ8uqapx5VgKhGKvrSznbNbyg0EpF0WaMWTaYPynPo11cYOPPH97KjqZafrrn
      HK0XZvZvuRYEYeKA6/13NrFhWQXmGTI9LPTAxWExcbJ9aDKo/Vz3MI0NZRw828uqulLUi0/q
      aFwlz2am+YKHiuI8mpaWY5YlSpz2a44tNrh20pJIXhJFtqyuYePySo609PP83mZaLngS4n8v
      AEtrinnPlqXc1LhoVvcBWRInpyfzvo8gsHV1NV2D44wFIoQicYa8QX5nTQ0n24fIs5mJKxo6
      OpGYyrolZYSjCucveFixyIU/FLv6Td6BJImYTMbTP5Ek5SR4vqiaxvBoiFePd3KkpZ++YR+R
      ecQXW80yla48NiyrYHvTYurKnZOL3KvxpWf2cfBs79UvfAd5NjOxuEpsgVOoheAqsPGdv3hf
      yu6XC2REKRFJFKlw5fHYHWt5+NY1DI8F6Rv20zU4xqA3wPBYCEVVCccUTJKE3WqiON9GWZF9
      MtmUq8COeQFP80rXwpytLqVunIlkeJYu1FaDmckIAVyOLIlUuvKpdOVzw8qqpN/vWndmZmL5
      IhfnL0ykUakqycM9GkJRNVwFtskcRgKwpLqYtj4vJllElsQZE/YC1FUWJcXWXCbjBJBqltW4
      EITZU+QU5llprC9lNBAhEIpRV1HI0fMDNC0pn8j/KQqc6hiirqKQmKLS1utFUTWalpQjCBNT
      vJW1pbT0jEzuCq1dUs7ZrmGK8m2UFzlYVVfK0Zb+mY0AVi5yJfjTG+T8iqqqJJ+a0oJZr8m3
      mWnrG0USRVxOO/kOC0uqi/CFooRjcd7qdFNfUcjyRS6qXPmT/kUOq4k8mxlF1Tl2foCCiwly
      N66oxGqecJwThAkbjjTP3vnz7WZWLk5MGKDB2+S8AAB2NM3uXxOOKQTCMXzBKLquE4rECYbj
      jAcieH1hIjEF99hELLEvFMXpsOALRonGJ5zg/KEokcva6OifcGrzBaP4ghM/27SicnLrdDpW
      LS6ltNCo+JJoMmIXKN30Dfv4zLd/k5A6B1azTHmRI+F+O3/5ge1sXV1z9QsN5oUxAgDVpQVs
      XF6ZkLYiMSXhnX9xhZMNyyoS2qbBBIYALvLQLasxyZn36xAFgQd3rsJiyvn9iqSQed94mlhU
      7uS9W5el24wrWLW4xIgBSCKGAC4iCgIP37qG6gwKOcy3mfnIezcYzm9JxPjNXobDZuZPH7iR
      PFvySqHOFUGAP3j3OhqqjMOvZGII4B2srivlw3evJ53JFwQB7t66jNs3NaQsPUiuYghgGm7b
      WD8RMpmGgP5Lnf9D71mfsQkFrieMc4AZ0DSdXx9u5zsvHU9ZrlNBgPt3rOTR2xuNXZ8UYQhg
      FnRd50zXMP/44zeSnjFalkT+4N3ruHfbiqTex2AqhgCugq7rjAUiPPXL4xw825uUoP7yYgcP
      7lzNXZuNOX+qMQQwR1RNo7l7hP/87Vs094wkJDjdYTWxvamWR29rTGqlTYOZMQQwTzRdp6Vn
      hN8c6eBIc/+MJVxnQhBgcXkhN69fzM51iylxGg5u6cQQwALRdZ1ofML3/9j5AVoueBgPRghG
      4sQVFV2f6Ow2s4zDZqa23Mmy6mLWLimnprTAONzKEAwBJJC4ohKKxKfECdssJmxmec4xygap
      xRCAQU5jPJYMchpDAAY5jSEAg5zGEIBBTmMIwCCnMQRgkNMYAjDIaQwBGOQ0hgAMchpDAAY5
      jSEAg5zGEIBBTmMIwCCnMQRgkNMYAjDIaQwBGOQ0hgAMchpDAAY5jSEAg5zGEIBBTmMIwCCn
      +f8u0nhMPcmmKgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Complaints by Borough' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Count of Complaints by Type' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Number of Complaints against Officers' width='192'>
      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
      G6jSvrlwtf44LosV3TCw7GuzsfFRirksij+My/k4v90T4vJ5O8lTYwTtTZr78rXqFUpNHYfN
      iqXbiEK2Mv2lN7ki66hSp+mD/YPUdnJk80Xcbvejk9l+3UYX3WJjV7fr2VeyMvXGm1zu1h5A
      oH+QahddZCvj586zk0xx+dUI2XyxPaOuUizkke0OZNmCpmhgOSCGZ0m9lGF1M8nq8hJ1pf1r
      8o1qkevvv08ms8Od+4vtGSUZXzCI1+MlFAxgt3aGnt1J8cuPf8mnd+53CusKS0vLZJNxNvdN
      a2JxEAz48Pv8hAL+jodC6pUHcaV3uDu33Fm2VufWzY+4dfNjUtVOg6S21kllsswvrXWkldKb
      XP/oU3biyyxuZffF5dwT1253v5/k2hy/vPUZ9+dXO+NqlZhf3mR7fZnsvrhsTg8Brxt/IIjf
      6+7IWkyt897N2+xsLrO43bm+p1bK8d6HN7hz5y4tbd+1Tav8SDd3iG7A10V3Z4P3PvqMnc0l
      FrdznbrlHO99cIM7d+7Q1PSO9PXVRbKZFCubyfYEyYIvGMDv3T1+rA9cb7oBAtExBrzQN3yG
      gKu9SzeQGIxF0XW4eH66PaMkIdfTzG4UsNsdXQ+GekNlaPAUbneXYYrVyeWpMaq6k6nT/R1l
      F1JrpMoK9i5d56O4DIkL05OdZest3IF+ohE/itp5oTt16RJKpcTk1HRnXquTWCSA5O5jaqSv
      PU2SyCdWSVc07HZb15uKmuwgFu3HYeuS6o5xftiLHBhmJNzeJpIkMXd/FovDgd3WORCQbC5i
      YT+Sp5+p4UhHuqIoRPuieP3ezot798AX133YHp5+pob7OtKV1gPdgA+j8/jn4sWLVGstps+d
      2VewhFxNMhuvYLfbHx0/pq8GLWfj/OSdGwxHQ/iC3ya4d7wtWRgZPEW1odBstYB9ywXsPuzK
      KvEtOD3haesF1GaN8MAAVpcH7F2WMKhNZm9dZ6VoZ1Kx8frkUFuy2+2ntrVN3Ggxdc7bPnaV
      H8fVaintcekapaaVybOnUTSDQX+ngZYXFrizuIzL28dvfPebbWmy3cNQv0ZT1WgpGu594223
      1091OUncaOL1eNt6p0q5zKnhUdyVBu5gl8/S1tP8v3c/xOd2gvd7jO07GKNBLxubcXy+EAFf
      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
    </thumbnail>
    <thumbnail height='192' name='Precinct 75 Allegations &amp; Type of Complaints' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Complaints Per Mayor' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Types of Complaints by Race' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='allegations word count' width='192'>
      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
      rg0QR2Vr/wMFpwVh1FU1WQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
